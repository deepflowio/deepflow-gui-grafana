# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - 'feature-**'
      - latest
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      ref:
        description: "Why trigger?"
        required: true
        type: string

env:
  IMAGE: "deepflow-init-grafana"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Checkout Deepflow Dashboards
        uses: actions/checkout@v3
        with:
          repository: deepflowys/deepflow-dashboards
          path: './deepflow-dashboards'

      - name: Copy Dashboards To Datasource
        run: mkdir ./deepflow-querier-datasource/src/dashboards && cp -r ./deepflow-dashboards/dashboards/* ./deepflow-querier-datasource/src/dashboards

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 14.0

      - name: Update plugin.json
        run: node ./deepflow-querier-datasource/src/update-dashboards.js

      - name: Review plugin.json
        run: cat ./deepflow-querier-datasource/src/plugin.json

      - name: Set up pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
            version: 7.3.0

      - name: Install dependencies
        run: 'test -d deepflow-apptracing-panel/dist  || pnpm install'

      - name: Build all
        run: 'test -d deepflow-apptracing-panel/dist  || pnpm run b:all'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - uses: robinraju/release-downloader@v1.4
        with:
          repository: "grafana/clickhouse-datasource"
          tag: "v1.1.2"
          fileName: "grafana-clickhouse-datasource-1.1.2.zip"

      - name: Unzip grafana clickhouse datasource
        run: unzip grafana-clickhouse-datasource-1.1.2.zip

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io"
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: "deepflowce"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "registry.cn-beijing.aliyuncs.com"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "${{ secrets.REGISTRY_ALIYUN_ADDR }}"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: set env
        run: |
          echo "IMAGE_TAG_PREFIX=${{ github.ref_name }}"|sed 's|main|latest|' >> $GITHUB_ENV
          echo "IMAGE_TAG=$(git rev-list --count HEAD)" >> $GITHUB_ENV

      - name: Build and push deepflow-init-grafana images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            "ghcr.io/${{ github.repository_owner }}/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "ghcr.io/${{ github.repository_owner }}/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "registry.cn-beijing.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "registry.cn-beijing.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "deepflowce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "${{ secrets.REGISTRY_ALIYUN_ADDR }}/dev/${{ env.IMAGE }}-ce:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "${{ secrets.REGISTRY_ALIYUN_ADDR }}/dev/${{ env.IMAGE }}-ce:${{ env.IMAGE_TAG_PREFIX }}"

      - name: Build tar.gz
        run: |
          tar -zcvf deepflow-apptracing-panel.tar.gz deepflow-apptracing-panel/dist/*
          tar -zcvf deepflow-querier-datasource.tar.gz deepflow-querier-datasource/dist/*
          tar -zcvf deepflow-topo-panel.tar.gz deepflow-topo-panel/dist/*
          mkdir release
          mv deepflow-apptracing-panel.tar.gz ./release/
          mv deepflow-querier-datasource.tar.gz ./release/
          mv deepflow-topo-panel.tar.gz ./release/

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: "oss-accelerate.aliyuncs.com"
          access-key-id: "${{ secrets.ALIYUN_OSS_ACCESS_KEY }}"
          access-key-secret: "${{ secrets.ALIYUN_OSS_SECRETS_KEY }}"
      - name: upload latest artifacts
        run: |
          cd release
          tar -zcvf deepflow-gui-grafana.tar.gz *
          ossutil cp -rf deepflow-gui-grafana.tar.gz  oss://deepflow-ce/bin/agent/latest/linux/amd64/deepflow-gui-grafana.tar.gz
      - name: upload main artifacts
        if: startsWith(github.ref, 'refs/heads/main')
        run: |
          cd release
          ossutil cp -rf deepflow-gui-grafana.tar.gz  oss://deepflow-ce/bin/agent/main/linux/amd64/deepflow-gui-grafana.tar.gz
      - name: upload stable artifacts
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          cd release
          ossutil cp -rf deepflow-gui-grafana.tar.gz  oss://deepflow-ce/bin/agent/stable/linux/amd64/deepflow-gui-grafana.tar.gz
