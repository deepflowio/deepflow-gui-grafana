# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - 'feature-**'
      - latest
      - backend-plugin
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      ref:
        description: "Why trigger?"
        required: true
        type: string

env:
  IMAGE: "deepflowio-init-grafana"
env:
  GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Checkout Deepflow Dashboards
        uses: actions/checkout@v3
        with:
          repository: deepflowio/deepflow-dashboards
          path: './deepflow-dashboards'

      - name: Copy Dashboards To Datasource
        run: mkdir ./deepflow-querier-datasource/src/dashboards && cp -r ./deepflow-dashboards/dashboards/* ./deepflow-querier-datasource/src/dashboards

      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 14.0

      - name: Update plugin.json
        run: node ./deepflow-querier-datasource/src/update-dashboards.js

      - name: Review plugin.json
        run: cat ./deepflow-querier-datasource/src/plugin.json

      - name: Set up pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
            version: 7.3.0

      - name: Install dependencies
        run: 'test -d deepflow-apptracing-panel/dist  || pnpm install'

      - name: Build all
        run: 'test -d deepflow-apptracing-panel/dist  || pnpm run b:all'

      - name: set up go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19.1'

      - name: Install go mage
        run: |
          cd ./deepflow-querier-datasource
          go env
          go get -u -v github.com/magefile/mage@v1.14.0
          cd /home/runner/go/pkg/mod/github.com/magefile/mage@v1.14.0
          chmod -R 755 /home/runner/go/pkg/mod/github.com/magefile/mage@v1.14.0
          go run bootstrap.go
          whereis mage

      - name: Build backend plugin
        run: |
          cd ./deepflow-querier-datasource
          mage -v

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - uses: robinraju/release-downloader@v1.4
        with:
          repository: "grafana/clickhouse-datasource"
          tag: "v2.0.5"
          fileName: "grafana-clickhouse-datasource-2.0.5.linux_arm64.zip"

      - uses: robinraju/release-downloader@v1.4
        with:
          repository: "grafana/clickhouse-datasource"
          tag: "v2.0.5"
          fileName: "grafana-clickhouse-datasource-2.0.5.linux_amd64.zip"

      - name: Unzip grafana clickhouse datasource
        run: |
          unzip -d plugin-amd64 grafana-clickhouse-datasource-2.0.5.linux_amd64.zip
          unzip -d plugin-arm64 grafana-clickhouse-datasource-2.0.5.linux_arm64.zip

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "ghcr.io"
          username: "${{ github.repository_owner }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: "deepflowce"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "registry.cn-beijing.aliyuncs.com"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: set env
        run: |
          echo "IMAGE_TAG_PREFIX=${{ github.ref_name }}"|sed 's|main|latest|' >> $GITHUB_ENV
          echo "IMAGE_TAG=$(git rev-list --count HEAD)" >> $GITHUB_ENV

      - name: Build and push deepflowio-init-grafana images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            "ghcr.io/${{ github.repository_owner }}/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "ghcr.io/${{ github.repository_owner }}/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"
            "deepflowce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"

      - name: Log in to ALIYUN HongKong Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "registry.cn-hongkong.aliyuncs.com"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Build and push deepflowio-init-grafana images to aliyun hongkong
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            "registry.cn-hongkong.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "registry.cn-hongkong.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"

      - name: Log in to ALIYUN Docker Registry
        uses: docker/login-action@v2
        with:
          registry: "registry.cn-beijing.aliyuncs.com"
          username: "${{ secrets.REGISTRY_ALIYUN_USER }}"
          password: "${{ secrets.REGISTRY_PASS }}"

      - name: Build and push deepflowio-init-grafana images to aliyun beijing
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            "registry.cn-beijing.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}-${{ env.IMAGE_TAG }}"
            "registry.cn-beijing.aliyuncs.com/deepflow-ce/${{ env.IMAGE }}:${{ env.IMAGE_TAG_PREFIX }}"

      - name: Build tar.gz
        run: |
          mkdir release
          mv deepflow-apptracing-panel/dist release/deepflow-apptracing-panel
          mv deepflow-querier-datasource/dist release/deepflow-querier-datasource
          mv deepflow-topo-panel/dist release/deepflow-topo-panel
          cd release
          tar -zcvf deepflow-gui-grafana.tar.gz *
          zip deepflowio-apptracing-panel-${{ env.IMAGE_TAG_PREFIX }} ./deepflow-apptracing-panel -r
          rm -r ./deepflow-apptracing-panel
          md5sum deepflowio-apptracing-panel-${{ env.IMAGE_TAG_PREFIX }}.zip > deepflowio-apptracing-panel-${{ env.IMAGE_TAG_PREFIX }}.zip.md5
          zip deepflowio-querier-datasource-${{ env.IMAGE_TAG_PREFIX }} ./deepflow-querier-datasource -r
          rm -r ./deepflow-querier-datasource
          md5sum deepflowio-querier-datasource-${{ env.IMAGE_TAG_PREFIX }}.zip > deepflowio-deepflow-datasource-${{ env.IMAGE_TAG_PREFIX }}.zip.md5
          zip deepflowio-topo-panel-${{ env.IMAGE_TAG_PREFIX }} ./deepflow-topo-panel -r
          rm -r ./deepflow-topo-panel
          md5sum deepflowio-topo-panel-${{ env.IMAGE_TAG_PREFIX }}.zip > deepflowio-topo-panel-${{ env.IMAGE_TAG_PREFIX }}.zip.md5

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: "oss-accelerate.aliyuncs.com"
          access-key-id: "${{ secrets.ALIYUN_OSS_ACCESS_KEY }}"
          access-key-secret: "${{ secrets.ALIYUN_OSS_SECRETS_KEY }}"
      - name: upload plugin artifacts
        run: |
          cd release
          ossutil cp -rf deepflow-gui-grafana.tar.gz oss://deepflow-ce/pkg/grafana-plugin/${{ env.IMAGE_TAG_PREFIX }}/deepflow-gui-grafana.tar.gz
      - name: upload stable artifacts
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          cd release
          ossutil cp -rf deepflow-gui-grafana.tar.gz oss://deepflow-ce/pkg/grafana-plugin/stable/deepflow-gui-grafana.tar.gz
